.graph-container {
    flex: 1; 
  min-width: 400px; 
  /* Removed min-height to allow dynamic height scaling */
  overflow-x: auto;
  /* overflow-y handled dynamically in TypeScript based on subplot count */
  position: relative;
}

.container {
  display: flex;
  flex-direction: column;
  height: 100%;
  overflow-x: scroll;
  overflow-y: scroll;
}
.tb-container {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  margin-top: 0px;
}

.material-icons {
  vertical-align: middle;
  font-size: 24px; /* Adjust the icon size */
  color: #2196f3; /* Customize the icon color */
}

.tooltip-container {
  position: relative;
  display: inline-block;
}

button[mat-icon-button] {
  background-color: #e0f7fa; /* Light cyan background */
  color: #00796b; /* Dark cyan text color */
  border-radius: 10%;
  transition: background-color 0.3s ease;
  display: flex;           /* Use Flexbox for alignment */
  align-items: center;     /* Center items vertically */
  justify-content: center; /* Center items horizontally */
  padding: 12px;           /* Ensure proper spacing */
}

button[mat-icon-button]:hover {
  background-color: #b2dfdb; /* Slightly darker cyan on hover */
  border-radius: 90%;
  transition: background-color 0.3s ease;
}

.tb-button-container {
  margin-top: 0px;
  margin-bottom: 30px;
  margin-right: 10px;
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: center;
  gap: 10px;                  /* Add spacing between items */
}

.top-part {
  width: 100%;
  text-align: left;
  padding: 10px;
  background-color: #f1f1f1;
}

.split-container {
  display: flex;
  flex: 1;
  height: 100%;
}

.left-side, .right-side {
  flex: 1;
  padding: 20px;
}

.left-side {
  background-color: #e0e0e0;
}

.right-side {
  background-color: #c0c0c0;
}

/* Collapsed state */
.collapsed {
  width: 0;  /* Collapse to 0 width */
  opacity: 0;  /* Hide with opacity */
  overflow: hidden;
  transition: width 0.3s ease-in-out, opacity 0.3s ease-in-out;
}

/* Expanded state (default) */
div[fxFlex] {
  transition: width 0.3s ease-in-out, opacity 0.3s ease-in-out;
}

.graph-container {
  flex: 1;
  width: 100%;
  height: 100%;
  min-width: 600px;
  /* Removed min-height to allow dynamic height scaling */

  overflow-x: scroll;  /* Force scrollbars to show */
  overflow-y: scroll;
}

#echartContainer {
  min-width: 600px;
  /* Height set dynamically in TypeScript */
  width: 100%;
  /* Remove individual scrolling - handled by parent container */
  overflow: hidden;
  position: relative;
}